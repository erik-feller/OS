CS3753 (Operating Systems)
Spring 2012
University of Colorado Boulder
Programming Assignment 2
Public Code

By Andy Sayler - 2012
http://www.andysayler.com

With help from:
Junho Ahn - 2012

Adopted from previous code by
 Chris Wailes <chris.wailes@gmail.com> - 2010
 Wei-Te Chen <weite.chen@colorado.edu> - 2011
 Blaise Barney - pthread-hello.c

---Folders---
input - names*.txt input files

---Executables---
multi-lookup - A multi threaded approach to DNS
lookup - A basic non-threaded DNS query-er
queueTest - Unit test program for queue
pthread-hello ; A simple threaded "Hello World" program

---Examples---
Build:
 make

Clean:
 make clean

Lookup DNS info for all names files in input folder:
 ./lookup input/names*.txt results.txt
For multi threaded
 ./multi-lookup input/names*.txt (the results will always come out at results.txt

Check queue for memory leaks:
 valgrind ./queueTest

Run pthread-hello
 ./pthread-hello

Adapting to number of cores on the current machine:
We chose to have the program assign the same number of threads as there are cores for resolving the DNS names. The logic behind this was that the processor would spend less time context switching between threads so that it would be faster. It was difficult to get consistent timing data from the unix system so benchmarking wasn't really conclusive so we relied on this knowledge from class.
